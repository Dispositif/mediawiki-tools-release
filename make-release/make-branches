#!/usr/bin/env python2
# vim:sw=4:ts=4:et:
"""Stuff about making branches and so forth"""


from __future__ import print_function
from requests.auth import HTTPDigestAuth
from requests.exceptions import HTTPError
from pygerrit.rest import GerritRestAPI
import yaml
from pprint import pprint


def main():
    """Do the needful"""
    with open("make-release.yaml") as conf:
        config = yaml.load(conf)

    auth = HTTPDigestAuth(config['username'], config['password'])
    rest = GerritRestAPI(url='https://gerrit.wikimedia.org/r/', auth=auth)

    things_to_branch = ['mediawiki/core', 'mediawiki/vendor']
    manual_branch_points = {
        'mediawiki/core': '0cd28e19cb0f9385a2a1cc11a4d8c9c21ff0b830',
        'mediawiki/vendor': '68b54dbcd8d65de64225a4ccc9dceb94429ca42a',
    }
    new_branch_name = 'REL1_30'

    for stuff in ['skins', 'extensions']:
        projects = rest.get('/projects/?p=mediawiki/%s' % stuff)
        for proj in projects:
            if projects[proj]['state'] == 'ACTIVE':
                things_to_branch.append(proj)

    for repo in things_to_branch:
        branch_point = 'HEAD'
        if repo in manual_branch_points:
            branch_point = manual_branch_points[repo]
        data = '{"revision":"%s"}' % branch_point
        print('Branching %s to %s from %s' % (
            repo, new_branch_name, branch_point))
        try:
            rest.put(
                '/projects/%s/branches/%s' % (
                    repo.replace('/', '%2F'),
                    new_branch_name.replace('/', '%2F')),
                data=data
            )
        except HTTPError as httpe:
            # Gerrit responds 409 for edit conflicts
            # means we already have a branch
            if httpe.response.status_code != 409:
                raise


if __name__ == '__main__':
    main()
