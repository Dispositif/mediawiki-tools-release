#!/usr/bin/env php
<?php
require __DIR__ . '/cli.php';

const USAGE = <<<EOF
    make-wmf-branch -n <new-branch> -o <old-branch> [-p wmf-clone-path]
                    [-c extension-name]

    Example: make-wmf-branch -o master -n 1.27.0-wmf.9

    Arguments:
    -h, --help                      Show this message
    -n, --new                       New branch name
    -o, --old                       Branch from (usually master)
    -p, --path                      Path on local disk from which to
                                    branch mediawiki-core
    -c, --continue-from             Extension from which to resume
                                    branching. Mainly useful in the case
                                    where initial branching fails.

    Example `--continue-from` Usage:
    --------------------------------
    Branching fails on the `AccountAudit` extension. Use `-c AccountAudit` to
    skip branching any previously successfully branched extensions and start
    with branching `AccountAudit`.

EOF;

$passedArgs = getopt( 'hn:o:p:c:', array(
    'help',
    'new:',
    'old:',
    'path:',
    'continue-from:',
) );

if ( isset( $passedArgs['help'] ) || isset( $passedArgs['h'] ) ) {
    fwrite( STDERR, USAGE );
    exit( 0 );
}

$storedArgs = array(
    array( 'n', 'new', 'newVersion', true ),
    array( 'o', 'old', 'oldVersion', true ),
    array( 'p', 'path', 'clonePath', false ),
    array( 'c', 'continue-from', 'firstExtension', false ),
);

foreach ( $storedArgs as $args ) {
    list( $short, $long, $var, $required ) = $args;

    $set = isset( $passedArgs[$short] ) || isset( $passedArgs[$long] );

    if ( !$set && $required ) {
        fprintf( STDERR, "'-%s' or '--%s' must be set.\n", $short, $long );
        fprintf( STDERR, USAGE );
        exit( 1 );
    }

    if ( !$set && !$required ) {
        $$var = null;
        continue;
    }

    $$var = isset( $passedArgs[$short] )
        ? $passedArgs[$short]
        : $passedArgs[$long];
}
$CWD = getcwd();
chdir(__DIR__);

$current_branch = trim(`git symbolic-ref HEAD`);
$abort = false;
if ($current_branch == 'refs/heads/master') {
    echo "Verifying that make-wmf-branch is up to date with origin/master...";
    shell_exec('git fetch');
    $log = `git log HEAD..origin/master --pretty=oneline`;
    $logsize = strlen($log);
    if ($logsize > 0) {
        $abort=true;
        $reason = "Out of date, you need to integrate these commits from origin/master:\n";
        $reason .= $log;
        echo "\n";
    } else {
        echo "ok\n";
    }
} else {
    $abort=true;
    $reason = "Wrong branch: $current_branch. Please run make-wmf-branch from the latest master revision.";
}

if ($abort) {
    echo "Aborting make-wmf-branch:\n";
    echo "Reason: $reason\n";
    exit(1);
}

$changes = `git status --porcelain`;
if ( !empty( $changes ) ) {
    echo "Warning: You have local changes in your tools/release checkout:\n";
    echo $changes."\n\n";
}

chdir($CWD);

require_once( __DIR__ . '/MakeWmfBranch.php' );

$obj = new MakeWmfBranch( $newVersion, $oldVersion );
$obj->setStartExtension( $firstExtension );
$obj->execute( $clonePath );
